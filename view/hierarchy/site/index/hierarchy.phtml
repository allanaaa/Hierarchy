<?php
$translate = $this->plugin('translate');
$escape = $this->plugin('escapeHtml');
$thumbnail = $this->plugin('thumbnail');
$this->htmlElement('body')->appendAttribute('class', 'item resource browse');

$filterLocale = (bool) $this->siteSetting('filter_locale_values');
$lang = $this->lang();
$valueLang = $filterLocale ? [$lang, ''] : null;

$query = $this->params()->fromQuery();
$this->headLink()->appendStylesheet($this->assetUrl('css/resource-page-blocks.css', 'Omeka'));
$this->htmlElement('body')->appendAttribute('class', 'item-set');
?>

<?php
if ($hierarchyGrouping->getLabel()) {
    echo $this->pageTitle($hierarchyGrouping->getLabel(), 2);
}

// Iterate through groupings to create nested list in metadata sidebar
$iterate = function ($groupings, $itemSet) use (&$iterate, &$allGroupings, &$printedGroupings, &$currentHierarchy, &$childCount) {
    foreach ($groupings as $key => $grouping) {
        // Continue if grouping has already been printed
        if (isset($printedGroupings) && in_array($grouping, $printedGroupings)) {
            continue;
        }

        if ($currentHierarchy != $grouping->getHierarchy()) {
            if (!is_null($currentHierarchy)) {
                echo '</ul></span></dd>';
            }
            $currentHierarchy = $grouping->getHierarchy();
            // Show label if hierarchy_show_label checked in config
            if ($this->setting('hierarchy_show_label')) {
                echo '<dt>' . $currentHierarchy->getLabel() . '</dt>';
            }
            echo '<dd class="value"><span class="value-content"><ul>';

            $allGroupings = $this->api()->search('hierarchy_grouping', ['hierarchy' => $currentHierarchy, 'sort_by' => 'position'])->getContent();
            $iterate($allGroupings, $itemSet);
            continue;
        }

        if ($grouping->getParentGrouping() != 0) {
            // $iterate through any groupings with current grouping as child
            $parentArray = array_filter($allGroupings, function($parent) use($grouping) {
                return $parent->id() == $grouping->getParentGrouping();
            });
            if (count($parentArray) > 0) {
                $iterate($parentArray, $itemSet);
                continue;
            }
        }

        try {
            $setID = $grouping->getItemSet() ? $grouping->getItemSet()->id() : '';
            $this->api()->read('item_sets', $setID)->getContent();
        } catch (\Exception $e) {
            // Print groupings without assigned itemSet
            $itemSet = null;
            $groupingLabel = $grouping->getLabel() ?: '&nbsp;';
            echo '<li>' . $groupingLabel;
        }

        if (!is_null($itemSet)) {
            // Show itemSet count if hierarchy_show_count checked in config
            $itemSetCount = $this->setting('hierarchy_show_count') ? $this->hierarchyHelper()->itemSetCount($grouping, $allGroupings) : '';
            // Bold groupings with current itemSet assigned
            if ($grouping->getItemSet()->id() == $itemSet->id()) {
                echo '<li><b>' . $this->hyperlink($grouping->getLabel(), $this->url('site/hierarchy', ['site-slug' => $this->currentSite()->slug(), 'grouping-id' => $grouping->id()])) . '</b>' . $itemSetCount;
            } else {
                echo '<li>' . $this->hyperlink($grouping->getLabel(), $this->url('site/hierarchy', ['site-slug' => $this->currentSite()->slug(), 'grouping-id' => $grouping->id()])) . $itemSetCount;
            }
        }

        // Return any groupings with current grouping as parent
        $childArray = array_filter($allGroupings, function($child) use($grouping) {
            return $child->getParentGrouping() == $grouping->id();
        });

        // Remove already printed groupings from $allGroupings array
        $allGroupings = array_filter($allGroupings, function($child) use($grouping) {
            return $child->id() != $grouping->id();
        });
        
        $printedGroupings[] = $grouping;

        if (count($childArray) > 0) {
            // Handle multidimensional hierarchies by saving/retrieving previous state
            $prevChildArray = $childArray ?: [];
            $childCount = count($childArray);
            echo '<ul>';
            $iterate($childArray, $itemSet);
            echo '</ul></li>';
            $childArray = $prevChildArray;
            continue;
        } elseif ($childCount >= 1) {
            echo '</li>';
            // Keep other variables the same if iterating 'sibling'
            $childCount--;
            continue;
        } else {
            echo '</li>';
        }
    }
};

$groupings = $this->api()->search('hierarchy_grouping', ['item_set' => $itemSet->id(), 'sort_by' => 'position'])->getContent();
if ($groupings) {
    echo '<div class="metadata">';
    $iterate($groupings, $itemSet);
    echo '</span></dd></div>';
}
?>
<div class="item-set-items">
<?php echo '<h3>' . $escape($translate('Items')) . '</h3>'; ?>

<?php echo $this->searchFilters(); ?>

<div class="browse-controls">
    <?php echo $this->pagination(); ?>
    <?php echo $this->hyperlink($translate('Advanced search'), $this->url('site/resource', ['controller' => 'item', 'action' => 'search'], true), ['class' => 'advanced-search']); ?>
    <?php echo $this->browse()->renderSortSelector('items'); ?>
</div>

<?php $this->trigger('view.browse.before'); ?>
<ul class="resource-list">
<?php
$headingTerm = $this->siteSetting('browse_heading_property_term');
$bodyTerm = $this->siteSetting('browse_body_property_term');
foreach ($items as $item):
    $heading = $headingTerm ? $item->value($headingTerm, ['default' => $translate('[Untitled]'), 'lang' => $valueLang]) : $item->displayTitle(null, $valueLang);
    $body = $bodyTerm ? $item->value($bodyTerm, ['lang' => $valueLang]) : $item->displayDescription(null, $valueLang);
?>
    <li class="item resource">
        <?php
        $linkContent = sprintf('%s<span class="resource-name">%s</span>',
            $thumbnail($item, 'medium'),
            $escape($heading));
        echo $item->linkRaw($linkContent, null, ['class' => 'resource-link']);
        ?>
    </li>
<?php endforeach; ?>
</ul>
<?php echo '</div>'; ?>
<?php $this->trigger('view.browse.after'); ?>
<?php echo $this->pagination(); ?>
